<Window x:Class="AvalonDockMvvm.Usage.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:av="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock"
        xmlns:menu="clr-namespace:AvalonDockMvvm.Usage.ViewModels.Core.Menu"
        xmlns:converter="clr-namespace:AvalonDockMvvm.Usage.Converter"
        xmlns:vm="clr-namespace:AvalonDockMvvm.Usage.ViewModels"
        xmlns:views="clr-namespace:AvalonDockMvvm.Usage.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Width="1024" Height="768"
        d:DataContext="{Binding Source={d:DesignInstance Type=vm:MainWindowVm, IsDesignTimeCreatable=True}}"
         >
    <Window.Resources>
        <DataTemplate x:Key="LayoutItemHeaderTemplate" DataType="{x:Type avControls:LayoutItem}">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding IconSource}" Margin="0,0,4,0"/>
                <TextBlock Text="{Binding Title}" />
            </StackPanel>
        </DataTemplate>
        <converter:BoolToNotConverter x:Key="BoolToNotConverter" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" DataContext="{Binding MenuViewModel}" ItemsSource="{Binding Items}">
            <Menu.Resources>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding Command}" />
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
                    <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                </Style>
                <HierarchicalDataTemplate DataType="{x:Type menu:CheckableMenuItemVm}" ItemsSource="{Binding Items}" />
            </Menu.Resources>
        </Menu>
        
        <StackPanel Grid.Row="1"
                    Orientation="Horizontal">
            <Button Content="Save Layout"
                    Click="SaveButton_Click"/>
            <Button Content="Load Layout"
                    Click="LoadButton_Click"/>
        </StackPanel>
        
        <av:DockingManager x:Name="_avalonDockManager"
                           Grid.Row="2"
                           IsEnabled="{Binding IsBusy, Converter={StaticResource BoolToNotConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           DataContext="{Binding DockManagerViewModel}"
                           DocumentsSource="{Binding Documents}"
                           AnchorablesSource="{Binding Anchorables}"
                           DocumentHeaderTemplate="{StaticResource LayoutItemHeaderTemplate}"
                           AnchorableTitleTemplate="{StaticResource LayoutItemHeaderTemplate}"
                           >
            <i:Interaction.Behaviors>
                <views:AvalonDockLayoutSerializerBehavior LoadLayoutCommand="{Binding LoadLayoutCommand}"
                                                              SaveLayoutCommand="{Binding SaveLayoutCommand}" />
            </i:Interaction.Behaviors>

            <av:DockingManager.Resources>
                
                <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" FalseValueVisibility="Hidden" />
                
                <!-- you can add additional bindings from the layoutitem to the DockWindowViewModel -->
                <Style x:Key="DocumentLayoutItemStyle" 
                       TargetType="{x:Type avControls:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                    <Setter Property="IconSource" Value="{Binding Model.ImageSource}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                </Style>
                <Style x:Key="AnchorableLayoutItemStyle" 
                       TargetType="{x:Type avControls:LayoutAnchorableItem}" 
                       BasedOn="{StaticResource DocumentLayoutItemStyle}" >
                    <Setter Property="CanHide" Value="False" />
                </Style>
                <Style x:Key="HidableAnchorableLayoutItemStyle" 
                       TargetType="{x:Type avControls:LayoutAnchorableItem}" 
                       BasedOn="{StaticResource DocumentLayoutItemStyle}" >
                    <Setter Property="CanHide" Value="True" />
                    <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Setter Property="HideCommand" Value="{Binding Model.HideCommand}" />
                </Style>

                <!-- add views for specific ViewModels -->
                <DataTemplate x:Key="SampleDocumentTemplate" DataType="{x:Type vm:SampleDocumentVm}">
                    <views:SampleDockWindowView DataContext="{Binding ContentText}" />
                </DataTemplate>
                <DataTemplate x:Key="SampleAnchorableTemplate" DataType="{x:Type vm:SampleAnchorableVm}">
                    <views:SampleDockWindowView DataContext="{Binding SomeContentText}" />
                </DataTemplate>
                <DataTemplate x:Key="SampleHidableAnchorableTemplate" DataType="{x:Type vm:SampleHidableAnchorableVm}">
                    <views:SampleDockWindowView DataContext="{Binding SomeHidableContentText}" />
                </DataTemplate>

            </av:DockingManager.Resources>

            <av:DockingManager.LayoutItemContainerStyleSelector>
                <views:LayoutItemStyleSelector DocumentStyle="{StaticResource DocumentLayoutItemStyle}"
                                               AnchorableStyle="{StaticResource AnchorableLayoutItemStyle}"
                                               HidableAnchorableStyle="{StaticResource HidableAnchorableLayoutItemStyle}"/>
            </av:DockingManager.LayoutItemContainerStyleSelector>
            
            <av:DockingManager.LayoutItemTemplateSelector>
                <views:LayoutItemTemplateSelector DocumentLayoutItemContentTemplate="{StaticResource SampleDocumentTemplate}"
                                                  AnchorableLayoutItemContentTemplate="{StaticResource SampleAnchorableTemplate}"
                                                  HidableAnchorableLayoutItemContentTemplate="{StaticResource SampleHidableAnchorableTemplate}"/>
            </av:DockingManager.LayoutItemTemplateSelector>
            
            <avLayout:LayoutRoot>
                <avLayout:LayoutPanel Orientation="Horizontal">
                    <avLayout:LayoutAnchorablePane DockWidth="232" />
                    <avLayout:LayoutDocumentPane />
                </avLayout:LayoutPanel>
            </avLayout:LayoutRoot>
            
        </av:DockingManager>
    </Grid>
</Window>
