<Window x:Class="Edi.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"

        xmlns:avBehav="clr-namespace:Edi.View.Behavior"
        xmlns:conv="clr-namespace:Edi.Converter"
        xmlns:pane="clr-namespace:Edi.View.Pane"
        xmlns:vm="clr-namespace:Edi.ViewModel"

        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        
        x:Name="mainWindow"
        Title="MainWindow" Height="650" Width="825">
  <Window.Resources>
    <conv:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
    <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <conv:BooleanNotConverter x:Key="BooleanNotConverter" />
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Menu Grid.Row="0">
      <MenuItem Header="_File">
        <MenuItem Header="New" Command="{Binding NewCommand}"/>
        <MenuItem Header="Open" Command="{Binding OpenCommand}"/>
        <Separator/>
        <MenuItem Header="Save" Command="{Binding ActiveDocument.SaveCommand}"/>
        <MenuItem Header="Save As..." Command="{Binding ActiveDocument.SaveAsCommand}"/>
        <Separator/>
        <MenuItem Header="Close" Command="{Binding ActiveDocument.CloseCommand}"/>
      </MenuItem>
      <MenuItem Header="_Tools">
        <MenuItem Header="Properties" IsChecked="{Binding FileStats.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
      </MenuItem>
    </Menu>
    <!--AnchorablesSource="{Binding Tools}" DocumentsSource="{Binding Files}"-->

    <Grid Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <ToolBarTray Grid.Column="0" SnapsToDevicePixels="True" >
        <ToolBar  VerticalAlignment="Stretch" ToolBarTray.IsLocked="True"
                SnapsToDevicePixels="True">

          <Button Command="Copy" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Copy32.png" Height="32" SnapsToDevicePixels="True" />
          </Button>
          <Button Command="Cut" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Cut32.png" Height="32" SnapsToDevicePixels="True" />
          </Button>
          <Button Command="Paste" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Paste32.png" Height="32" SnapsToDevicePixels="True" />
          </Button>
          <Button Command="Delete" SnapsToDevicePixels="True"
                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Delete32.png" Height="32"/>
          </Button>
          <Separator Margin="3"/>

          <Button Command="Undo" SnapsToDevicePixels="True"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Undo32.png" Height="32"/>
          </Button>
          <Button Command="Redo" SnapsToDevicePixels="True"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Command.Text}">
            <Image Source="/Edi;component/Images/App/Edit_Redo32.png" Height="32"/>
          </Button>

          <Separator Margin="3" />

          <ToggleButton IsChecked="{Binding ActiveDocument.WordWrap, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.WordWrap}"
                      ToolTip="Click this button to switch word wrap on or off"
                      >
            <Image Source="/Edi;component/Images/App/ShowWordWrap32.png" Height="32"/>
          </ToggleButton>

          <ToggleButton IsChecked="{Binding ActiveDocument.ShowLineNumbers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      Command="{Binding ToggleEditorOptionCommand}"
                      CommandParameter="{x:Static vm:ToggleEditorOption.ShowLineNumber}"
                      ToolTip="Click this button to switch display of line numbers on or off">
            <Image Source="/Edi;component/Images/App/ShowLineNumbers32.png" Height="32"/>
          </ToggleButton>

          <ToggleButton IsChecked="{Binding ActiveDocument.TextOptions.ShowEndOfLine, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
              Command="{Binding ToggleEditorOptionCommand}"
              CommandParameter="{x:Static vm:ToggleEditorOption.ShowEndOfLine}"
              ToolTip="Highlighted end of line in text (toggle on/off)">
            <Image Source="/Edi;component/Images/App/ShowEnter32.png" Height="32"/>
          </ToggleButton>
          <ToggleButton IsChecked="{Binding ActiveDocument.TextOptions.ShowSpaces, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
              Command="{Binding ToggleEditorOptionCommand}"
              CommandParameter="{x:Static vm:ToggleEditorOption.ShowSpaces}"
              ToolTip="Highlight spaces characters in text (toggle on/off)">
            <Image Source="/Edi;component/Images/App/ShowSpaces32.png" Height="32"/>
          </ToggleButton>
          <ToggleButton IsChecked="{Binding ActiveDocument.TextOptions.ShowTabs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
              Command="{Binding ToggleEditorOptionCommand}"
              CommandParameter="{x:Static vm:ToggleEditorOption.ShowTabs}"
              ToolTip="Highlight tab characters in text (toggle on/off)">
            <Image Source="/Edi;component/Images/App/ShowTab32.png" Height="32"/>
          </ToggleButton>

          <Separator Margin="3" />

          <Button Command="{Binding ADLayout.SaveWorkspaceLayoutToStringCommand}" SnapsToDevicePixels="True"
                  ToolTip="Save Workspace Layout" Content="Save Layout">
          </Button>
          <Button Command="{Binding ADLayout.LoadWorkspaceLayoutFromStringCommand}" SnapsToDevicePixels="True"
                  ToolTip="Load Workspace Layout" Content="Load Layout">
          </Button>
        </ToolBar>
      </ToolBarTray>
    </Grid>

    <avalonDock:DockingManager AnchorablesSource="{Binding Tools}" x:Name="dockManager" x:FieldModifier="private"
                                DocumentsSource="{Binding Files}"
                                ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                                IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanNotConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                avBehav:AvalonDockLayoutSerializer.LoadLayoutCommand="{Binding ADLayout.LoadLayoutCommand}"
                                avBehav:AvalonDockLayoutSerializer.SaveLayoutCommand="{Binding ADLayout.SaveLayoutCommand}"

                                Grid.Row="2">

      <avalonDock:DockingManager.DocumentHeaderTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
            <!-- Show IsReadOnly Icon in document tab if that properties' present and true -->
            <Image Source="/Edi;component/Images/App/DocTab/Lock-icon.png"
                  Margin="3,0,0,0"
                  VerticalAlignment="Center">
              <Image.Visibility>
                <PriorityBinding FallbackValue="Collapsed" >
                  <Binding Path="Content.IsReadOnly" Mode="OneWay" Converter="{StaticResource BoolToVisibilityConverter}" />
                </PriorityBinding>
              </Image.Visibility>
              <Image.ToolTip>
                <PriorityBinding FallbackValue="">
                  <Binding Path="Content.IsReadOnlyReason" Mode="OneWay" />
                </PriorityBinding>
              </Image.ToolTip>
            </Image>
          </StackPanel>
        </DataTemplate>
      </avalonDock:DockingManager.DocumentHeaderTemplate>

      <avalonDock:DockingManager.LayoutItemTemplateSelector>
        <pane:PanesTemplateSelector>
          <pane:PanesTemplateSelector.FileViewTemplate>
            <DataTemplate>
              <avalonEdit:TextEditor Document="{Binding Document, UpdateSourceTrigger=PropertyChanged}"
                                    SyntaxHighlighting="{Binding HighlightDef}"
                                    IsReadOnly="{Binding IsReadOnly}"
									                  IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    WordWrap="{Binding Path=WordWrap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ShowLineNumbers="{Binding Path=ShowLineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Options="{Binding TextOptions}"
                                    >
                <avalonEdit:TextEditor.ContextMenu>
                  <ContextMenu>
                    <MenuItem Command="Cut" Header="Cut">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Cut32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Copy" Header="Copy">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Copy32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Paste" Header="Paste">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Paste32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Delete" Header="Delete">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Delete32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Undo" Header="Undo">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Undo32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Redo" Header="Redo">
                      <MenuItem.Icon>
                        <Image Source="/Edi;component/Images/App/Edit_Redo32.png" Height="16"/>
                      </MenuItem.Icon>
                    </MenuItem>
                  </ContextMenu>
                </avalonEdit:TextEditor.ContextMenu>
              </avalonEdit:TextEditor>
            </DataTemplate>
          </pane:PanesTemplateSelector.FileViewTemplate>
          <pane:PanesTemplateSelector.FileStatsViewTemplate>
            <DataTemplate>
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding FileSize}"/>
                <TextBlock Text="{Binding LastModified}"/>
                <TextBox Text="test"/>
              </StackPanel>
            </DataTemplate>
          </pane:PanesTemplateSelector.FileStatsViewTemplate>
        </pane:PanesTemplateSelector>
      </avalonDock:DockingManager.LayoutItemTemplateSelector>

      <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
        <pane:PanesStyleSelector>
          <pane:PanesStyleSelector.ToolStyle>
            <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
              <Setter Property="Title" Value="{Binding Model.Title}"/>
              <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
              <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
              <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
              <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
              <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
            </Style>
          </pane:PanesStyleSelector.ToolStyle>
          <pane:PanesStyleSelector.FileStyle>
            <Style TargetType="{x:Type avalonDock:LayoutItem}">
              <Setter Property="Title" Value="{Binding Model.Title}"/>
              <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
              <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
              <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
              <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
            </Style>
          </pane:PanesStyleSelector.FileStyle>
        </pane:PanesStyleSelector>
      </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
        
      <avalonDock:DockingManager.LayoutUpdateStrategy>
        <pane:LayoutInitializer/>
      </avalonDock:DockingManager.LayoutUpdateStrategy>

      <avalonDock:LayoutRoot>
        <avalonDock:LayoutPanel Orientation="Vertical">
          <avalonDock:LayoutDocumentPane/>
          <avalonDock:LayoutAnchorablePane Name="ToolsPane" DockHeight="150">
          </avalonDock:LayoutAnchorablePane>
        </avalonDock:LayoutPanel>
      </avalonDock:LayoutRoot>
    </avalonDock:DockingManager>
  </Grid>
</Window>
